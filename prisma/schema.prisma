// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  name      String?
  email     String?   @unique
  image     String?
  hashedPassword  String?
  emailVerified DateTime?
  favoriteIds String[] @default([])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  accounts  Account[]
  listings  Listing[]
  reservations Reservation[]
}

model Account {
  id        String      @id @default(uuid())
  provider  String
  providerAccountId String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Listing {
  id        String      @id @default(uuid())
  title     String
  description String
  image     String
  roomCount Int
  bathroomCount Int
  guestCount Int
  locationValue  String
  price     Int
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  reservations Reservation[]
  user      User     @relation(fields: [userId], references: [id])
}

model Reservation {
  id        String      @id @default(uuid())
  userId    String
  startDate DateTime
  endDate   DateTime
  listingId String
  totalPrice Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  listing   Listing  @relation(fields: [listingId], references: [id], onDelete: Cascade)
}
